# cheatsheet: also just pre ?

# prefix == pre == Ctrl-a <- Ctrl-b (default)
# M = Alt key --> M-d = Alt-d
# C = Ctrl key --> C-z = Ctrl-z
# A..Z = Capital a-z = Shift-a..z

# pre r                   -- reload config
# pre d                   -- detach
# pre :                   -- command mode (useless)

# +--------------------------------------------------+
# | keybinding | session |  window  |      pane      |
# |------------|---------|----------|----------------|
# |     new    |   M-N   |    M-n   |      pre |-    |
# |            |         |   pre-n  |                |
# |--------------------------------------------------|
# |     kill   |  sd tm  |  pre-w/W |      pre-x/X   |
# |--------------------------------------------------|
# |   rename   |   M-R   |    M-r   |                |
# |  default : |  pre-$  |   pre-,  |                |
# |--------------------------------------------------|
# |    switch  |  <--->  |   <--->  |      <-+->     |
# |            |   M-AD  | C-Page+- | C-a  C-L/D/U/R |
# |--------------------------------------------------|
# |     swap   |         |   <--->  |      <-+->     |
# |            |         |   M-ad   |    M-s / C-=   |
# |--------------------------------------------------|
# |    resize  |         |          |      <-+->     |
# |            |         |          | prefix-L/D/U/R |
# |            |         |          |      (*)C-z    |
# |            |         |          | pre-(Up->Down) |
# +--------------------------------------------------+

# C-z     -- maximize pane

# move window from one session to another:
#   move-window -s srcsess:windowname -t destsess
# if already in windowname
#   move-window -t destsess
# if already in destsess
#   movew -d srcsess:windowname

# to link a window between multiple sessions
#   link-window -d -s srcsess:windowname -t destsess:windowname

# =======================================================================#

# !IMPORTANT: Fix Tmux's bug : vim's key binding <C-h> can not work
bind-key -T root C-h send-keys Escape "[104;5u"

# !IMPORTANT: for display prompt, vim's status line
set -g default-terminal "screen-256color"
# use UTF8

# !IMPORTANT : required for properly performming my tmux-preconfigured scripts
set -g base-index 1       # set the window start index to 1 (0 by default)
setw -g pane-base-index 1 # set the pane start index to 1 (0 by default)

# automatically renumber tmux windows when a window is closed in a session
# some prefer it on because of the limitation of the keyboard (1-9)
# I prefer it off (default) to switch to opened windows without burning my short-term momory
set -g renumber-windows off

# Attempt to set the client terminal title using the tsl and fsl terminfo(5)
set-option -g set-titles on
set-option -g set-titles-string "#T - #W"   # #T for pane_title ; #W for window_name

# -???-{{
	# Rather than constraining window size to the maximum size of any client
	# connected to the *session*, constrain window size to the maximum size of any
	# client connected to *that window*. Much more reasonable.
	setw -g aggressive-resize on
# }}

# enable mouse support for switching panes/windows
set-option -g -q mouse on

set -sg escape-time 0

# Activity Monitoring : tmux notify you in the status area when a window has activity
setw -g monitor-activity off
set -g visual-activity off

# set scrollback history to xxxx
set-option -g history-limit 4096 #30000

# utf-8
setw -g utf8 on
set-option -g status-utf8 on                # for prompts

set-option -sg escape-time 0                # shorten command delay
set-option -g repeat-time 1000

#=[ CHANGE DEFAULT KEY BINDINGS ]========================================#
# NOTE: bind -r (for repeat), bind -n or -T root (for triggering without prefix)
# unbind default prefix and set it to screen-like prefix Ctrl+A.

# Tip : map Capslock to prefix to quickly trigger the prefix combination key
# How ? http://c2.com/cgi/wiki?RemapCapsLock
# For Darwin, install KeyRemap4MacBook and ... G! it
# For Linux, install xorg-xmodmap xkeycaps --> configure ~/.Xmodnap.conf
unbind-key C-b #no more C^b
set -g prefix C-a
bind C-a send-prefix    # use send-prefix to pass C-a through to application
# bind a send-prefix      # for nested tmux sessions

# reload ~/.tmux.conf
bind r source-file ~/.tmux.conf \; display "Reloaded!"

#-- NAVIGATION and RESIZING --{{{-----------------------------------------
# bind-key C-a last-window           # switch between current and last-found window
bind -rn C-PageUp select-window -t :-        # previous window (default: p)
bind -rn C-PageDown select-window -t :+      # next window     (default: n)
bind Tab choose-window   #

# quickly cycle through panels
bind C-a select-pane -t:.+
# pane movement shortcuts
## switch panes using Alt-arrow without prefix
bind -n C-Left select-pane -L
bind -n C-Right select-pane -R
bind -n C-Up select-pane -U
bind -n C-Down select-pane -D
#bind h select-pane -L
#bind j select-pane -D
#bind k select-pane -U
#bind l select-pane -R
# Resize pane shortcuts
bind -nr M-Left resize-pane -L 5
bind -nr M-Right resize-pane -R 5
bind -nr M-Up resize-pane -U 5
bind -nr M-Down resize-pane -D 5
#bind -r H resize-pane -L 5
#bind -r J resize-pane -D 5
#bind -r K resize-pane -U 5
#bind -r L resize-pane -R 5

#*# unbind C-z (suspend tmux client - useless) <--mistype-- z (Toggle zoom-state - useful)
unbind C-z
bind -n C-z resize-pane -Z #\; display-message "Zoom zoom zoom ..."
# }}}

#-- SWAP windows and panes --{{{------------------------------------------
# windows : move windows left/right
bind -n M-a swap-window -t -1
bind -n M-d swap-window -t +1
# panels  : swapped current/marked panel with the previous pane
bind -n M-s swap-pane -U \; display-panes # prefix-q to display-panes ...

unbind =                # default keybindings (Choose which buffer to paste interactively from a list.)
bind -r = select-layout -n # -n -or- -p -or- even-horizontal, even-vertical, main-horizontal, main-vertical, or tiled. (M-1-->M-5)
# }}}

#-- CREATE/CLOSE --{{{----------------------------------------------------
bind n new-window                    # open a new window
bind w kill-window                   # close a window
bind W kill-window -a                # close a window except the current window
unbind x
bind x kill-pane                     # close a pane
bind X kill-pane -a                  # kill all pane except the current one

# split window and inherit working directory
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
# }}}

#-- SESSIONS with meta (Alt) key --{{{------------------------------------
bind -n M-N command-prompt -p "Name of new session:" 'new-session -c "#{pane_current_path}" -s "%%"'
bind -n M-R command-prompt 'rename-session %%'

bind -n M-n command-prompt -p "Name of new window:" 'new-window -c "#{pane_current_path}" -n "%%"'
bind -n M-r command-prompt 'rename-window %%'
# switch between sessions
bind -n M-A switch-client -p
bind -n M-D switch-client -n
# }}}

# synchronize all panes in a window
bind y setw synchronize-panes

# Join-panen
   # join-pane [-bdhv] [-l size | -p percentage] [-s src-pane] [-t dst-pane]
# Like split-window, but instead of splitting dst-pane and creating a new pane, split it and move src-pane into the space.  This can be used to reverse break-pane.
# The -b option causes src-pane to be joined to [left of or above] dst-pane.
# If -s is omitted and a marked pane is present (see select-pane -m), the marked pane is used rather than the current pane.

# bind j   join-pane -b -h -t !
bind J   join-pane -t !

#=[ COPY-MODE ]==========================================================#
# By defaut : prefix-[ Enter copy mode to copy text or view the history.
#             prefix-]  Paste the most recently copied buffer of text.

#-- Use KEYBOARD only ----{{{---------------------------------------------
# step 1 # prefix-Escape to enter copy-mode
unbind [
bind Escape copy-mode
# set vi mode for copy mode
set-window-option -g mode-keys vi
set-option -g status-keys vi
# step 2 # --> v --> select
bind -t vi-copy 'v' begin-selection
# }}}
#-- or use mouse to select (don't release your finger) -----{{{-----------
bind -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "select-pane -t =; send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "select-pane -t =; send-keys -M" "select-pane -t =; send-keys -M"
bind-key -t vi-copy WheelUpPane halfpage-up
bind-key -t vi-copy WheelDownPane halfpage-down
# }}}
# step 3 # --> y to yank
bind -t vi-copy 'y' copy-selection
# step 3 # --> prefix-y to copy from tmux-buffer
bind y   run "tmux show-buffer | if [ -x /usr/bin/pbcopy ]; then pbcopy; else xclip -sel clip -i; fi"
# bind y run "tmux save-buffer - | xsel -i -b"
# bind p run "tmux set-buffer \"$(xsel -o -b)\"; tmux paste-buffer"
# step 4 # --> prefix-p to paste in tmux
unbind ]
unbind p
bind p paste-buffer
# step 5 # --> or paste in the GUI apps, if you like...

#-- For Dawwin (MacOSX) --{{{---------------------------------------------
# require: brew install reattach-to-user-namespace --> then, ...

# dumb osx : connect tmux to the OS X clipboard service :
set -g default-command "which reattach-to-user-namespace 2>/dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"

# # Buffers to/from Mac clipboard, yay tmux book from pragprog
# bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
# bind C-v run "tmux set-buffer $(reattach-to-user-namespace pbpaste); tmux paste-buffer"
# }}}

#=[ SYSTEM-SPECIFIC SECTION ]============================================#

# only if this is the first level of inception do that fancy status bar
if-shell '[ -z "$SSH_CONNECTION" ] && [ -f "~/.tmux-local.conf" ]' 'source "~/.tmux-local.conf"' 'run-shell "(( TMUX_INCEPTION++ ))"'

# theme = status line
if-shell 'test "$(uname -s)" = "Darwin"' 'source $DOTFILES/zsh/prompt/tmux_human.sh' 'source $DOTFILES/zsh/prompt/tmux_theme.sh'

#=[ MISC ]===============================================================#

# maximizing and restoring windows
# now become useless because I have C-z binding to resize-pane -Z :)
unbind Up
bind Up new-window -d -n fullscreen \; swap-pane -s fullscreen.1 \; select-window -t fullscreen
unbind Down
bind Down last-window \; swap-pane -s fullscreen.1 \; kill-window -t fullscreen

set-option -g bell-on-alert on

if-shell 'case "$(tmux -V)" in "tmux 1."[7-9]) true ;; *) false ;; esac' 'set-window-option -g wrap-search off'

# Remove unused keybindings
unbind C-o

#=[ Tmux Plugin Manager ]================================================#

# # List of plugins
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'

# # Other examples:
# # set -g @plugin 'github_username/plugin_name'
# # set -g @plugin 'git@github.com/user/plugin'
# # set -g @plugin 'git@bitbucket.com/user/plugin'

# # Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# run '~/.tmux/plugins/tpm/tpm'
